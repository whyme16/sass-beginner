$baseLineHeight: 2;
$baseLineHeight: 1.5 !default;
body {
	line-height: $baseLineHeight;
}

$brand-primary: darken(#428bca, 6.5%) !default;
$btn-primary-color: #fff !default;
$btn-primary-bg: $brand-primary !default;
$btn-primary-border: darken($btn-primary-bg, 5%) !default;

.btn-primary {
	background-color: $btn-primary-bg;
	color: $btn-primary-color;
	border: 1px solid $btn-primary-border;	
}

// Selector Nesting
nav {
	a {
		color: red;

		header & {
			color: green;
		}
	}
}
// Properties Nesting
.box {
	width: 250px;
	height: 50px;
	border: {
		top: 1px solid red;
		bottom: 1px solid green;
	}
}
// Pseudocode Nesting
.clearfix {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
		overflow: hidden;
	}
}

// Mixin Declaration
// Without Parameters
@mixin border-radius {
	-webkit-border-radius: 5px;
	border-radius: 5px;
}
// With Parameters
@mixin border-radius($radius: 10px) {
	-webkit-border-radius: $radius;
	-border-radius: $radius;
}
// Complex Mixin
@mixin box-shadow($shadow...) {
	@if length($shadow) >= 1 {
		@include prefixer(box-shadow, $shadow);
	} @else {
		$shadow: 0 0 4px rgba(0, 0, 0, 0.3);
		@include prefixer(box-shadow, $shadow);
	}
}

@mixin center($width, $height) {
	width: $width;
	height: $height;
	margin: {
		top: -($height) / 2;
		left: -($width) / 2;
	}
}

@mixin box-shadow1($shadows...) {
	@if length($shadows) >= 1 {
		-webkit-box-shadow: $shadows;
		-box-shadow: $shadows;
	} @else {
		$shadows: 0 0 2px rgba(#000, .25);
		-webkit-box-shadow: $shadows;
		box-shadow: $shadows;
	}
}

button {
	@include border-radius(20px);
	@include center(80px, 30px);
	@include box-shadow1(0 0 1px rgba(#000, .5), 0 0 2px rgba(#000, .2));
}

// Extension / Inheritance
.btn {
	border: 1px solid #ccc;
	padding: 6px 10px;
	font-size: 14px;
	@extend %mt5;
	@extend %pt5;
}
.btn-primary1 {
	background-color: #f36;
	color: #fff;
	@extend .btn;
}
.btn-second {
	background-color: orange;
	color: #fff;
	@extend .btn;
}

// % Placeholder
%mt5 {
	margin-top: 5px;
}
%pt5 {
	padding-top: 5px;
}

.block {
	@extend %mt5;

	span {
		@extend %pt5;
	}
}

// Interpolation
// Ex #1
$properties: (margin, paddig);
@mixin set-value($side, $value) {
	@each $prop in $properties {
		#{$prop}-#{$side}: $value;
	}
}
.login-box {
	@include set-value(top, 14px);
}

// Ex #2
@mixin generate-sizes($class, $small, $medium, $big) {
	#{$class}-small { font-size: $small; }
	#{$class}-medium { font-size: $medium; }
	#{$class}-big { font-size: $big; }
}
@include generate-sizes("header-text", 12px, 20px, 40px);

// Ex #3 - Apply @extend for Interpolation
%updated-status {
	margin-top: 20px;
	background: #F00;
}
.selected-status { font-weight: bold; }
$flag: "status";
.navigation {
	@extend %updated-#{$flag};
	@extend .selected-#{$flag};
}

// String
@mixin firefox-message($selector) {
	body.firefox #{$selector}:before {
		content: "Hi, Firefox users!";
	}
}
@include firefox-message(".header");

// Sum / Minus
.box1 { width: 20px + 8in; }

// Multiplication
.box2 { width: 10px * 2; }
// .box2 { width: 10px * 2px; } // INVALID

// Division
.box3 { width: (100px / 2); }
.box4 { width: 100px / 2 + 2in; }
$width: 1000px;
.item { width: $width / 10; }

.box5 { width: (1000px / 100px); }

// String Operations
$content: "Hello" + " " + "Sass!";
.box6:before { content: $content; }

div { cursor: e + -resize; }

p:before {
	content: "Foo " + Bar;
	font-family: san- + "serif";
}